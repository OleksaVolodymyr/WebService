package com.epam.lab.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-08-20T15:03:40.158+03:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "CopterRemoteControllerImpService", 
                  wsdlLocation = "http://localhost:8080/RemoteControll/CopterRemoteControll?wsdl",
                  targetNamespace = "http://service.lab.epam.com/") 
public class CopterRemoteControllerImpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.lab.epam.com/", "CopterRemoteControllerImpService");
    public final static QName CopterRemoteControllerImpPort = new QName("http://service.lab.epam.com/", "CopterRemoteControllerImpPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/RemoteControll/CopterRemoteControll?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CopterRemoteControllerImpService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/RemoteControll/CopterRemoteControll?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CopterRemoteControllerImpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CopterRemoteControllerImpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CopterRemoteControllerImpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public CopterRemoteControllerImpService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CopterRemoteControllerImpService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CopterRemoteControllerImpService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns CopterRemoteController
     */
    @WebEndpoint(name = "CopterRemoteControllerImpPort")
    public CopterRemoteController getCopterRemoteControllerImpPort() {
        return super.getPort(CopterRemoteControllerImpPort, CopterRemoteController.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CopterRemoteController
     */
    @WebEndpoint(name = "CopterRemoteControllerImpPort")
    public CopterRemoteController getCopterRemoteControllerImpPort(WebServiceFeature... features) {
        return super.getPort(CopterRemoteControllerImpPort, CopterRemoteController.class, features);
    }

}
